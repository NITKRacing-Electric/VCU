[
    {
        "id": "5195b113bb76e214",
        "type": "ui_text",
        "z": "6619e34bd4713880",
        "group": "4a8bbfd7f4939c0c",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Brake %",
        "format": "{{msg.payload.data}}",
        "layout": "col-center",
        "className": "",
        "x": 1100,
        "y": 200,
        "wires": []
    },
    {
        "id": "a7d5e4140752630e",
        "type": "ui_text",
        "z": "6619e34bd4713880",
        "group": "4a8bbfd7f4939c0c",
        "order": 19,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Power (kW)",
        "format": "<font size=50% >{{msg.payload.data}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1110,
        "y": 320,
        "wires": []
    },
    {
        "id": "ec72fd021a799768",
        "type": "ui_text",
        "z": "6619e34bd4713880",
        "group": "4a8bbfd7f4939c0c",
        "order": 21,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Hottest cell temp(Â°C)",
        "format": "{{msg.payload.data}}",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 360,
        "wires": []
    },
    {
        "id": "8f3a91685311eeef",
        "type": "ui_text",
        "z": "6619e34bd4713880",
        "group": "4a8bbfd7f4939c0c",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Accelerator %",
        "format": "{{msg.payload.data}}",
        "layout": "col-center",
        "className": "",
        "x": 1120,
        "y": 160,
        "wires": []
    },
    {
        "id": "87b536b57561ca86",
        "type": "ui_text",
        "z": "6619e34bd4713880",
        "group": "4a8bbfd7f4939c0c",
        "order": 22,
        "width": 14,
        "height": 1,
        "name": "",
        "label": "",
        "format": "<font color=\"red\" size=60% >{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1055,
        "y": 400,
        "wires": [],
        "l": false,
        "info": "THIS IS TO DISPLAY FAULTS"
    },
    {
        "id": "9b9643e847ce65e7",
        "type": "ui_gauge",
        "z": "6619e34bd4713880",
        "name": "",
        "group": "4a8bbfd7f4939c0c",
        "order": 16,
        "width": 10,
        "height": 5,
        "gtype": "gage",
        "title": "Speed",
        "label": "km/h",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "70",
        "className": "",
        "x": 1250,
        "y": 240,
        "wires": []
    },
    {
        "id": "826b220aa0856ffa",
        "type": "inject",
        "z": "6619e34bd4713880",
        "name": "sample data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "sample",
        "payload": "80",
        "payloadType": "num",
        "x": 860,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3ec2e26d175908ba",
        "type": "inject",
        "z": "6619e34bd4713880",
        "name": "sample data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "sample",
        "payload": "3",
        "payloadType": "num",
        "x": 860,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "8322106b81545329",
        "type": "inject",
        "z": "6619e34bd4713880",
        "name": "sample data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "sample",
        "payload": "78",
        "payloadType": "num",
        "x": 860,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "24e898a19b40eaac",
        "type": "inject",
        "z": "6619e34bd4713880",
        "name": "sample data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "sample",
        "payload": "78",
        "payloadType": "num",
        "x": 860,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "6f144196b93faa9f",
        "type": "inject",
        "z": "6619e34bd4713880",
        "name": "sample data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "sample",
        "payload": "19",
        "payloadType": "num",
        "x": 860,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "de73ef7e275747b8",
        "type": "inject",
        "z": "6619e34bd4713880",
        "name": "sample data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "sample",
        "payload": "57",
        "payloadType": "num",
        "x": 860,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "c84dfe0455053789",
        "type": "inject",
        "z": "6619e34bd4713880",
        "name": "sample data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "sample",
        "payload": "",
        "payloadType": "str",
        "x": 860,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "7579fcd9176ad8e7",
        "type": "ui_button",
        "z": "6619e34bd4713880",
        "name": "",
        "group": "4a8bbfd7f4939c0c",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Endurance",
        "tooltip": "",
        "color": "",
        "bgcolor": "#8500f7",
        "className": "",
        "icon": "",
        "payload": "Endurance",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "118c68ca33385a07"
            ]
        ]
    },
    {
        "id": "61a719b9e43b121e",
        "type": "ui_button",
        "z": "6619e34bd4713880",
        "name": "",
        "group": "4a8bbfd7f4939c0c",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Acceleration",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "4d045208d4be741e"
            ]
        ]
    },
    {
        "id": "fc28c141af196934",
        "type": "ui_button",
        "z": "6619e34bd4713880",
        "name": "",
        "group": "4a8bbfd7f4939c0c",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Skidpad ",
        "tooltip": "",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "2946607de4b944c8"
            ]
        ]
    },
    {
        "id": "118c68ca33385a07",
        "type": "function",
        "z": "6619e34bd4713880",
        "name": "function 1",
        "func": "flow.set('mode',\"ENDURANCE\");\nmsg.payload = flow.get('mode');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 120,
        "wires": [
            [
                "69828cefec9f188b",
                "0b6cd0c62c0296bb"
            ]
        ]
    },
    {
        "id": "2946607de4b944c8",
        "type": "function",
        "z": "6619e34bd4713880",
        "name": "function 2",
        "func": "flow.set('mode',\"SKIDPAD\");\nmsg.payload = flow.get('mode');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 80,
        "wires": [
            [
                "69828cefec9f188b",
                "0b6cd0c62c0296bb"
            ]
        ]
    },
    {
        "id": "4d045208d4be741e",
        "type": "function",
        "z": "6619e34bd4713880",
        "name": "function 3",
        "func": "flow.set('mode',\"ACCELERATION\");\nmsg.payload = flow.get('mode');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 40,
        "wires": [
            [
                "69828cefec9f188b",
                "0b6cd0c62c0296bb"
            ]
        ]
    },
    {
        "id": "69828cefec9f188b",
        "type": "debug",
        "z": "6619e34bd4713880",
        "name": "o/p GPIO",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 60,
        "wires": []
    },
    {
        "id": "0b6cd0c62c0296bb",
        "type": "ui_text",
        "z": "6619e34bd4713880",
        "group": "4a8bbfd7f4939c0c",
        "order": 7,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "MODE: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 560,
        "y": 120,
        "wires": []
    },
    {
        "id": "3bcbd8b0b0a46c1c",
        "type": "ui_gauge",
        "z": "6619e34bd4713880",
        "name": "",
        "group": "4a8bbfd7f4939c0c",
        "order": 15,
        "width": 3,
        "height": 2,
        "gtype": "donut",
        "title": "SoC",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "35",
        "seg2": "70",
        "className": "",
        "x": 1250,
        "y": 280,
        "wires": []
    },
    {
        "id": "e8a46aa08729117c",
        "type": "inject",
        "z": "6619e34bd4713880",
        "name": "SerialPortIn",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3:56",
        "payloadType": "str",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "42c0f6b845d24b53"
            ]
        ]
    },
    {
        "id": "42c0f6b845d24b53",
        "type": "function",
        "z": "6619e34bd4713880",
        "name": "Function_to_split_data_and_convert",
        "func": "let input = msg.payload;\nlet pair = input.split(\":\");\n\nlet header = parseInt(pair[0].trim().charAt(0));\nlet data = pair[1].trim();\n\nswitch (header) {\n    case 1:\n        data = parseInt(data)\n        flow.set('Accelerator', data);\n        msg.payload = {\n            \"header\": 1,\n            \"data\": data\n        };\n        break;\n    case 2:\n        data = parseInt(data)\n        flow.set('Brake', data);\n        msg.payload = {\n            \"header\": 2,\n            \"data\": data\n        };\n        break;\n    case 3:\n        data = parseInt(data)\n        flow.set('Speed', data);\n        msg.payload = {\n            \"header\": 3,\n            \"data\": data\n        };\n        break;\n    case 4:\n        data = parseFloat(data);\n        flow.set('SOC', data);\n        msg.payload = {\n            \"header\": 4,\n            \"data\": data\n        };\n        break;\n    case 5:\n        data = parseFloat(data);\n        flow.set('HvVoltage', data);\n        msg.payload = {\n            \"header\": 5,\n            \"data\": data\n        };\n        break;\n    case 6:\n        data = parseFloat(data);\n        flow.set('TempHottestCell', data);\n        msg.payload = {\n            \"header\": 6,\n            \"data\": data\n        };\n        break;\n    case 7:\n        // remove brakets and split by comma to get array\n        data = data.replace(\"[\", \"\");\n        data = data.replace(\"]\", \"\");\n        data = data.trim();\n        data = data.split(\",\");\n        // convert to int\n        data = data.map(function (x) {\n            return parseInt(x, 10);\n        });\n        // store data as array in flow\n\n        flow.set('Faults', data);\n        msg.payload = {\n            \"header\": 7,\n            \"data\": data\n            // data is an array\n        };\n        break;\n\n    default:\n        msg.payload = {\n            \"header\": header,\n            \"data\": data\n        }\n        break;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nconst data = 0;\nflow.set('Accelerator', data);\nflow.set('Brake', data);\nflow.set('Speed', data);\nflow.set('SOC', data);\nflow.set('HvVoltage', data);\nflow.set('TempHottestCell', data);\nflow.set('Faults', []);",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 260,
        "wires": [
            [
                "194b096427e8c460",
                "17c3b3f510b896af"
            ]
        ]
    },
    {
        "id": "194b096427e8c460",
        "type": "switch",
        "z": "6619e34bd4713880",
        "name": "Switching_data_according_to_header",
        "property": "payload.header",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 770,
        "y": 260,
        "wires": [
            [
                "8f3a91685311eeef"
            ],
            [
                "5195b113bb76e214"
            ],
            [
                "bbe90e4ce0e632e4"
            ],
            [
                "1574f5a4a2cc3212"
            ],
            [
                "a7d5e4140752630e"
            ],
            [
                "ec72fd021a799768"
            ],
            [
                "87b536b57561ca86"
            ]
        ]
    },
    {
        "id": "17c3b3f510b896af",
        "type": "debug",
        "z": "6619e34bd4713880",
        "name": "msg object",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 360,
        "wires": []
    },
    {
        "id": "bbe90e4ce0e632e4",
        "type": "function",
        "z": "6619e34bd4713880",
        "name": "Convert data",
        "func": "let input = msg.payload.data\n\nlet msg2 = { value: msg.payload.data };\n\nreturn msg2;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 240,
        "wires": [
            [
                "9b9643e847ce65e7"
            ]
        ]
    },
    {
        "id": "1574f5a4a2cc3212",
        "type": "function",
        "z": "6619e34bd4713880",
        "name": "Convert data",
        "func": "let input = msg.payload.data\n\nlet msg2 = { value: msg.payload.data };\n\nreturn msg2;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 280,
        "wires": [
            [
                "3bcbd8b0b0a46c1c"
            ]
        ]
    },
    {
        "id": "4a8bbfd7f4939c0c",
        "type": "ui_group",
        "name": "Default",
        "tab": "557e6c69d95fa359",
        "order": 1,
        "disp": false,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "557e6c69d95fa359",
        "type": "ui_tab",
        "name": "onboard Dashboard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]